name: CI_pull_request

# Controls when the action will run.
# Triggers the workflow on push.
on: [pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up Java Environment
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Setup Ballerina Environment
      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: latest

      # Grant execute permission to the gradlew script
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      # Build the project with Gradle
      - name: Build with Gradle
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
          JAVA_OPTS: -DBALLERINA_DEV_COMPILE_BALLERINA_ORG=true
        run: |
          ./gradlew build
        
      # Build Ballerina Project
      - name: Ballerina Build
        run: bal pack ./ballerina 
        env:
          JAVA_HOME: /usr/lib/jvm/default-jvm
      
      # Test Ballerina Project
      - name: Ballerina Test
        # tests will be skipped if the PR is from a forked repository (as the secrets are not available)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        run: bal test --test-report --code-coverage --coverage-format=xml ./ballerina 
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          EP_URL: ${{ secrets.EP_URL }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
          REFRESH_URL: ${{ secrets.REFRESH_URL }}
          JAVA_HOME: /usr/lib/jvm/default-jvm
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
